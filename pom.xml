<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.lantin</groupId>
    <artifactId>boot-project-scaffold</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>scaffold-framework</module>
        <module>scaffold-common</module>
        <module>scaffold-service</module>
        <module>scaffold-mybatis-plus-generator</module>
    </modules>

    <packaging>pom</packaging>
    <properties>
        <!--项目属性，插件版本管理-->
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
        <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
        <project.snapshot.version>1.0-SNAPSHOT</project.snapshot.version>

        <!--依赖包版本-->
        <ali.fastjson.version>1.2.75</ali.fastjson.version>
        <ali.druid.version>1.2.6</ali.druid.version>
        <commons.lang3.version>3.12.0</commons.lang3.version>
        <jackson.version>2.9.8</jackson.version>
        <knife4j.version>3.0.3</knife4j.version>
        <!--<powermock.version>1.7.4</powermock.version>-->
        <mapstruct.version>1.4.2.Final</mapstruct.version>
        <mockito.version>4.0.0</mockito.version>
        <mybatis.generator.version>1.3.7</mybatis.generator.version>
        <mybatis.plus.boot.version>3.4.3.4</mybatis.plus.boot.version>
        <redisson.boot.version>3.16.4</redisson.boot.version>
        <servlet.version>4.0.1</servlet.version>
        <spring.boot.version>2.5.6</spring.boot.version>
        <spring.native.version>0.10.0-SNAPSHOT</spring.native.version>
        <swagger.version>3.0.0</swagger.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!---springboot主配置-->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring.boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <!--mybatis依赖-->
            <!--<dependency>-->
            <!--    <groupId>org.mybatis</groupId>-->
            <!--    <artifactId>mybatis</artifactId>-->
            <!--    <version>${mybatis.version}</version>-->
            <!--</dependency>-->
            <!-- mybatis generator依赖-->
            <dependency>
                <groupId>org.mybatis.generator</groupId>
                <artifactId>mybatis-generator-core</artifactId>
                <version>${mybatis.generator.version}</version>
            </dependency>
            <!-- mybatis整合spring-->
            <!--<dependency>-->
            <!--    <groupId>org.mybatis</groupId>-->
            <!--    <artifactId>mybatis-spring</artifactId>-->
            <!--    <version>${mybatis.spring.version}</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>org.springframework.experimental</groupId>
                <artifactId>spring-native</artifactId>
                <version>${spring.native.version}</version>
            </dependency>
            <!--    mybatis整合springboot-->
            <!--<dependency>-->
            <!--    <groupId>org.mybatis.spring.boot</groupId>-->
            <!--    <artifactId>mybatis-spring-boot-starter</artifactId>-->
            <!--    <version>${mybatis.boot.version}</version>-->
            <!--</dependency>-->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis.plus.boot.version}</version>
            </dependency>

            <!--druid数据源 boot启动依赖-->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${ali.druid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${ali.druid.version}</version>
            </dependency>
            <!--knife4j依赖-->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>

            <!-- redisson 依赖-->
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson</artifactId>
                <version>${redisson.boot.version}</version>
            </dependency>
            <dependency>
                <groupId>org.redisson</groupId>
                <artifactId>redisson-spring-boot-starter</artifactId>
                <version>${redisson.boot.version}</version>
            </dependency>
            <!-- fastjson依赖 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${ali.fastjson.version}</version>
            </dependency>
            <!-- kryo序列化依赖-->
            <dependency>
                <groupId>com.esotericsoftware</groupId>
                <artifactId>kryo</artifactId>
                <version>5.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons.lang3.version}</version>
            </dependency>
            <!-- mapstruct依赖-->
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct-processor</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mapstruct</groupId>
                <artifactId>mapstruct</artifactId>
                <version>${mapstruct.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-inline</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hibernate.validator</groupId>
                <artifactId>hibernate-validator</artifactId>
                <version>6.2.0.Final</version>
            </dependency>

            <!-- 项目模块版本管理 start-->
            <dependency>
                <groupId>com.lantin</groupId>
                <artifactId>scaffold-framework</artifactId>
                <version>${project.snapshot.version}</version>
            </dependency>
            <dependency>
                <groupId>com.lantin</groupId>
                <artifactId>scaffold-common</artifactId>
                <version>${project.snapshot.version}</version>
            </dependency>
            <!-- 项目模块版本管理 end-->
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--springboot的打包插件-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.springframework.boot</groupId>
                            <artifactId>spring-boot-configuration-processor</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <!-- 全局是否执行maven生命周期中的测试：是否跳过测试 -->
                    <skipTests>true</skipTests>
                    <!-- 解决测试中文乱码-->
                    <forkMode>once</forkMode>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>
        </plugins>


        <pluginManagement>
            <plugins>
                <!--springboot的打包插件-->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring.boot.version}</version>
                </plugin>
                <!--maven 编译插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven-compiler-plugin.version}</version>
                </plugin>
                <!-- maven-surefire-plugin 测试包 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>